import tkinter as tk
from tkinter import messagebox
import random

class MathsQuiz:
    def __init__(self, root):
        self.root = root
        self.root.title("Maths Quiz")
        self.root.geometry("400x300")

        self.score = 0
        self.current_question = 0
        self.max_questions = 10
        self.num1 = 0
        self.num2 = 0
        self.correct_answer = 0
        self.operation = ''
        self.difficulty = 1

        self.start_screen()

    def start_screen(self):
        for widget in self.root.winfo_children():
            widget.destroy()

        tk.Label(self.root, text="Choose Difficulty Level", font=("Arial", 16)).pack(pady=20)
        tk.Button(self.root, text="Easy", command=lambda: self.start_quiz(1)).pack(pady=5)
        tk.Button(self.root, text="Moderate", command=lambda: self.start_quiz(2)).pack(pady=5)
        tk.Button(self.root, text="Advanced", command=lambda: self.start_quiz(3)).pack(pady=5)

    def start_quiz(self, difficulty):
        self.difficulty = difficulty
        self.score = 0
        self.current_question = 0
        self.quiz_screen()

    def generate_problem(self):
        min_val, max_val = self.get_difficulty_range()
        self.num1 = random.randint(min_val, max_val)
        self.num2 = random.randint(min_val, max_val)
        self.operation = '+' if random.choice([True, False]) else '-'
        self.correct_answer = self.num1 + self.num2 if self.operation == '+' else self.num1 - self.num2

    def get_difficulty_range(self):
        if self.difficulty == 1:
            return 1, 9
        elif self.difficulty == 2:
            return 10, 99
        elif self.difficulty == 3:
            return 1000, 9999

    def quiz_screen(self):
        self.generate_problem()

        for widget in self.root.winfo_children():
            widget.destroy()

        tk.Label(self.root, text=f"Question {self.current_question + 1} of {self.max_questions}", font=("Arial", 14)).pack(pady=10)
        tk.Label(self.root, text=f"{self.num1} {self.operation} {self.num2} =", font=("Arial", 16)).pack(pady=10)

        self.answer_entry = tk.Entry(self.root, font=("Arial", 14))
        self.answer_entry.pack(pady=10)
        self.answer_entry.focus()

        self.feedback_label = tk.Label(self.root, text="", font=("Arial", 12))
        self.feedback_label.pack(pady=10)

        tk.Button(self.root, text="Submit", command=self.check_answer).pack(pady=10)

    def check_answer(self):
        try:
            user_answer = int(self.answer_entry.get())
            if user_answer == self.correct_answer:
                self.score += 10
                self.feedback_label.config(text="Correct!", fg="green")
            else:
                self.feedback_label.config(text="Incorrect. Try again!", fg="red")
                self.answer_entry.delete(0, tk.END)
                return

            self.current_question += 1
            if self.current_question < self.max_questions:
                self.quiz_screen()
            else:
                self.show_results()
        except ValueError:
            self.feedback_label.config(text="Please enter a valid number.", fg="orange")
            self.answer_entry.delete(0, tk.END)

    def show_results(self):
        for widget in self.root.winfo_children():
            widget.destroy()

        grade = self.get_grade()
        tk.Label(self.root, text=f"Your Final Score: {self.score}/100", font=("Arial", 16)).pack(pady=20)
        tk.Label(self.root, text=f"Grade: {grade}", font=("Arial", 14)).pack(pady=10)

        tk.Button(self.root, text="Play Again", command=self.start_screen).pack(pady=5)
        tk.Button(self.root, text="Quit", command=self.root.quit).pack(pady=5)

    def get_grade(self):
        if self.score > 90:
            return "A+"
        elif self.score > 80:
            return "A"
        elif self.score > 70:
            return "B"
        elif self.score > 60:
            return "C"
        elif self.score > 50:
            return "D"
        else:
            return "F"


if __name__ == "__main__":
    root = tk.Tk()
    app = MathsQuiz(root)
    root.mainloop()
